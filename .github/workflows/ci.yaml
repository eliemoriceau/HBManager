name: CI Monorepo

on:
  workflow_dispatch:  # Permet le déclenchement manuel
    inputs:
      package:
        description: 'Package à tester (backend ou frontend)'
        required: true
        type: choice
        options:
          - backend
          - frontend
        default: 'backend'
      environment:
        description: 'Environnement de test'
        required: true
        type: choice
        options:
          - development
          - staging
        default: 'development'
      debug:
        description: 'Activer le mode debug'
        required: false
        type: boolean
        default: false
  push:
    paths:
      - 'packages/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'packages/**'
      - '.github/workflows/ci.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ github.event_name == 'workflow_dispatch' && [github.event.inputs.package] || ['frontend', 'backend'] }}
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: ESLint & Prettier
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:13
#        env:
#          POSTGRES_USER: user
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: hbmanager_test
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd="pg_isready -U user -d hbmanager_test"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=5
#      redis:
#        image: redis:6
#        ports:
#          - 6379:6379
    strategy:
      fail-fast: false
      matrix:
        package: ${{ github.event_name == 'workflow_dispatch' && [github.event.inputs.package] || ['frontend', 'backend'] }}
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        env:
          DATABASE_URL: postgres://user:password@localhost:5432/hbmanager_test
          REDIS_URL: redis://localhost:6379
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [backend]
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package }}-artifact
          path: |
            dist
            build

  codeql:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
