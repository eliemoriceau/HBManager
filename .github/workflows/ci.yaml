
name: CI Monorepo

on:
  workflow_dispatch:
  push:
    paths:
      - 'packages/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'packages/**'
      - '.github/workflows/ci.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: [backend]
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Yarn
        run: corepack enable && corepack prepare yarn@4.6.0 --activate

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
            **/node_modules
            **/.eslintcache
          key: ${{ runner.os }}-yarn-${{ matrix.package }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.package }}-
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: ESLint & Prettier
        run: yarn lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: [backend]
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Yarn
        run: corepack enable && corepack prepare yarn@4.6.0 --activate

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
            **/node_modules
            **/.eslintcache
          key: ${{ runner.os }}-yarn-${{ matrix.package }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.package }}-
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        env:
          DATABASE_URL: postgres://user:password@localhost:5432/hbmanager_test
          REDIS_URL: redis://localhost:6379
        run: yarn test

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [backend]
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Yarn
        run: corepack enable && corepack prepare yarn@4.6.0 --activate

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
            **/node_modules
            **/.eslintcache
          key: ${{ runner.os }}-yarn-${{ matrix.package }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.package }}-
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable --mode=production

      - name: Build
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package }}-artifact
          path: |
            dist
            build

  codeql:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
